<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot2 on m.evans</title>
    <link>/tags/ggplot2/</link>
    <description>Recent content in ggplot2 on m.evans</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Michelle Evans</copyright>
    <lastBuildDate>Thu, 02 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using custom images with geom_point</title>
      <link>/2020/01/02/using-custom-images-with-geom-point/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/02/using-custom-images-with-geom-point/</guid>
      <description>ggplot comes with a standard set of point shapes (below left) that you can use with geom_point that are generally enough for standard plotting. If you’re using ggplot for map making, you may require the use of symbols more common to GIS software (below right). This is where using your own custom images can be helpful.
IMAGE COMPARING POINTS
There isn’t out-of-the-box support for using customs icons or images as points in ggplot (at least as far as I know), but you can add icons as a raster using annotation_raster.</description>
    </item>
    
    <item>
      <title>dplyr and ggplot pipe dreams</title>
      <link>/2018/06/15/dplyr-and-ggplot-pipe-dreams/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/15/dplyr-and-ggplot-pipe-dreams/</guid>
      <description>I’ve been getting more and more immersed into using tidyverse packages as time goes on. Every now and then I have trouble getting something to work that I could do very quickly in base R, but that seems to be happening less and less as more SO questions use the tidyverse and documentation gets better and better.
Anyways, I am a little late to the party but I recently discovered that you can pipe directly from your dplyr calls into ggplot2, manipulating and plotting your data all at once.</description>
    </item>
    
    <item>
      <title>The Man in the BoxPlot</title>
      <link>/2018/04/04/the-man-in-the-boxplot/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/04/the-man-in-the-boxplot/</guid>
      <description>While boxplots may not be everyone’s favorite way to visualize a data distribution, they are a really useful data exploration tool, and being able to customize them to your every need is pretty great.
violin plto cartoon
ggplot2 is great for easy out-of-the-box visualizations, and lets you do a lot of customizations once you get familiar with the grammar of it. But sometimes you want to trick out your plots with something even extra.</description>
    </item>
    
  </channel>
</rss>