<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on m.evans</title>
    <link>https://ditheringdata.netlify.com/tags/r/</link>
    <description>Recent content in R on m.evans</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Michelle Evans</copyright>
    <lastBuildDate>Tue, 11 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ditheringdata.netlify.com/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rolling functions along columns</title>
      <link>https://ditheringdata.netlify.com/2020/02/11/rolling-functions-along-columns/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ditheringdata.netlify.com/2020/02/11/rolling-functions-along-columns/</guid>
      <description>Rolling, or window, functions allow you to apply a function over a window of size n of a vector, such as a column in a dataframe. This is especially useful when you want to know the accumulation of some variable over time, like precipitation over the past month or the count of some occurrence in a surrounding number of days.
To follow this you’ll need the following packages:
library(RcppRoll) library(ggplot2); theme_set(theme_bw()) library(dplyr) I recently used rolling functions to deal with a data puzzle of my own.</description>
    </item>
    
    <item>
      <title>Ebola Outbreak in DRC 2018</title>
      <link>https://ditheringdata.netlify.com/2018/05/15/drc-ebola/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ditheringdata.netlify.com/2018/05/15/drc-ebola/</guid>
      <description>An outbreak of Ebola occurred in the Equator province of the Democratic Republic of Congo in April 2018. The WHO published its first Disease Outbreak News on the outbreak on May 10th and began efforts to conduct ring vaccination around the area. You can read more about it on the WHO’s website on the 2018 Ebola outbreak in the DRC.</description>
    </item>
    
    <item>
      <title>Battle Royal: sf vs. sp</title>
      <link>https://ditheringdata.netlify.com/2018/01/28/sf-vs-sp/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ditheringdata.netlify.com/2018/01/28/sf-vs-sp/</guid>
      <description>I’ve recently made the jump from sp to sf for a lot of my simple spatial work. I’ll go into why in more detail below, but this was mostly because it plays so nicely with my tidy workflow. But I’ve also been wondering if I gain anything else from making the switch, or worse, if I’m losing out? My two main questions:
 Which is faster? Which one is better on my poor ol’ MacBook’s memory?</description>
    </item>
    
    <item>
      <title>Animating Maps with gganimate</title>
      <link>https://ditheringdata.netlify.com/2018/01/01/gganimate/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ditheringdata.netlify.com/2018/01/01/gganimate/</guid>
      <description>I’ve recently been working on a monthly yellow fever dataset from Brazil that spans fourteen years. Overall, there are over 5600 spatial units and 168 months (that’s nearly 1,000,000 rows of data for those of you keeping track). It is great to have access to so much data, but sometimes visualizing it can be a bit of a pain, especially when we are trying to look at patterns across time and space.</description>
    </item>
    
  </channel>
</rss>